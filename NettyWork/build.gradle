import com.sun.org.apache.xalan.internal.xsltc.compiler.Copy

import javax.security.auth.login.Configuration

group 'com.tthy'
version '1.0.0.0'

apply plugin: 'java'
apply plugin: 'idea'
sourceCompatibility = 1.8

/**源码文件设置
sourceSets {
    src{
        main {
            java
            resources

        }

        test{
            java
            resources

        }
    }

}
**/
repositories {
    maven{ url "http://maven.aliyun.com/nexus/content/groups/public/"}
    mavenLocal()
    jcenter()
    maven { url "http://repo.maven.apache.org/maven2/"}
    maven { url 'https://repo.spring.io/libs-milestone'}
    mavenCentral()
}

/**依赖分组**/
configurations{
    tthy
}
/**自定义属性**/
project.ext {
    nettyVersion = '4.1.19.Final'
    commonsLang3Version = '3.7'
    commonsLoggingVersion='1.2'
    dom4jVersion='1.6.1'
    javassistVersion='3.22.0-GA'
    slf4jVersion='1.7.25'
    protobufJavaVersion='2.4.1'
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    // https://mvnrepository.com/artifact/io.netty/netty-all
    compile group: 'io.netty', name: 'netty-all', version: "${nettyVersion}"
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: "${commonsLang3Version}"
    // https://mvnrepository.com/artifact/commons-logging/commons-logging
    compile group: 'commons-logging', name: 'commons-logging', version: "${commonsLoggingVersion}"
    // https://mvnrepository.com/artifact/dom4j/dom4j
    compile group: 'dom4j', name: 'dom4j', version: "${dom4jVersion}"
    // https://mvnrepository.com/artifact/org.javassist/javassist
    compile group: 'org.javassist', name: 'javassist', version: "${javassistVersion}"
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"
    // https://mvnrepository.com/artifact/org.slf4j/jcl-over-slf4j
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: "${slf4jVersion}"
    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: "${protobufJavaVersion}"
    /***
    compile project(':shared') 依赖另一个工程**/
    /***
    compile files('libs/a.jar', 'libs/b.jar')
    compile fileTree(dir: 'libs', include: '*.jar')**依赖另一个文件*/
    compile fileTree(dir: 'libs', include: '*.jar')
}


jar {
    String someString = ''
    configurations.runtime.each {someString = someString + " libs\\"+it.name}
    manifest {
       /** attributes 'Main-Class': 'com.each.dubboMainEnd'**/
        attributes 'Class-Path': someString
    }
}

//清除上次的编译过的文件
task clearAll(type:Delete){
    delete 'build','target'
}

task copyJar(type:Copy){
    from configurations.runtime
    into ('build/libs/lib')

}

//把JAR复制到目标目录
task release(type: Copy,dependsOn: [build, copyJar]) {
//    from  'conf'
//    into ('build/libs/eachend/conf') // 目标位置
}